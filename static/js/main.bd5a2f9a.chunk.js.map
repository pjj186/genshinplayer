{"version":3,"sources":["components/GlobalStyles.js","components/common/BackwardButton.js","components/common/ForwardButton.js","components/common/PlayButton.js","components/common/Avatar.js","components/common/SongController.js","components/common/SongTitle.js","components/common/Header.js","components/common/Loader.js","routes/MusicPlay.js","fbase.js","components/Characters/RaidenBox.js","components/Characters/HutaoBox.js","components/Characters/KazuhaBox.js","components/Characters/KleeBox.js","components/Characters/AyakaBox.js","routes/MusicList.js","components/App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","reset","BackwardButtonContainer","styled","div","BackwardButton","videoRef","icon","faBackward","onClick","current","currentTime","ForwardButtonContainer","ForwardButton","faForward","PlayButtonContainer","PlayButton","playMusic","loading","useState","isPlay","setIsPlay","handleEnded","ended","useEffect","video","addEventListener","removeEventListener","prev","pause","faPause","faPlay","AvatarContainer","AvatarImage","Image","img","Avatar","imgSrc","src","alt","SongInfoContainer","SongController","children","Container","SongTitle","Header","Ringanim","keyframes","LdsRing","InLdsRing","props","delay","Loader","Player","BackgroundContainer","bgSrc","ButtonContainer","BackLink","Link","Video","Title","span","VolumeGroup","VolumeBox","input","TimeLineBox","TimeBox","TimeLineGroup","TotalTimeBox","CurrentTimeBox","BottomGroup","MUSIC_LF","MusicPlay","useRef","volumeRef","totalTime","timelineel","srcValue","setSrcValue","setImgSrc","setBgSrc","name","setName","volumeBar","setVolumeBar","timeline","setTimeline","duration","setDuration","originduration","setOriginDuration","setLoading","volumeValue","getLocalForage","localforage","getItem","err","value","console","log","timeFormat","handleVolumeChange","event","target","volume","handleTimeUpdate","innerText","Math","floor","seconds","Date","toISOString","substr","setTimeout","to","faBars","type","step","min","max","ref","onChange","url","URL","createObjectURL","file","play","faVolumeOff","faVolumeUp","autoPlay","playsInline","storageService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getStorage","TextBox","AvatarImg","Icon","RaidenBox","getImgFile","a","imgRef","getDownloadURL","xhr","XMLHttpRequest","responseType","onload","response","open","send","getBackGround","evnet","getMusicFile","listRef","listAll","list","filename","items","musicRef","getMetadata","meta","getBlobDuration","blob","setItem","pathname","state","faPlayCircle","HutaoBox","KazuhaBox","KleeBox","AyakaBox","ListBox","MusicList","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd5a2f9a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n        user-select: none;\r\n    }\r\n    body {\r\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst BackwardButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  font-size: 18px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 1); // 그림자 나중에 수정\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BackwardButton = ({ videoRef }) => {\r\n  const handleBackward = () => {\r\n    videoRef.current.currentTime -= 10;\r\n  };\r\n  return (\r\n    <BackwardButtonContainer>\r\n      <FontAwesomeIcon icon={faBackward} onClick={handleBackward} />\r\n    </BackwardButtonContainer>\r\n  );\r\n};\r\n\r\nexport default BackwardButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faForward } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ForwardButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  font-size: 18px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 1);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ForwardButton = ({ videoRef }) => {\r\n  const handleForward = () => {\r\n    videoRef.current.currentTime += 10;\r\n  };\r\n  return (\r\n    <ForwardButtonContainer>\r\n      <FontAwesomeIcon icon={faForward} onClick={handleForward} />\r\n    </ForwardButtonContainer>\r\n  );\r\n};\r\n\r\nexport default ForwardButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PlayButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  font-size: 25px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 1); // 그림자 나중에 수정\r\n  cursor: pointer;\r\n`;\r\n\r\nconst PlayButton = ({ playMusic, videoRef, loading }) => {\r\n  const [isPlay, setIsPlay] = useState(false);\r\n\r\n  const handleEnded = () => {\r\n    if (videoRef.current.ended) setIsPlay(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!loading) {\r\n      video.addEventListener(\"timeupdate\", handleEnded);\r\n    }\r\n    return () => {\r\n      if (!loading) {\r\n        video.removeEventListener(\"timeupdate\", handleEnded);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onClickPlay = () => {\r\n    setIsPlay((prev) => !prev);\r\n    if (!isPlay) {\r\n      playMusic();\r\n    }\r\n    if (isPlay) {\r\n      videoRef.current.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PlayButtonContainer onClick={onClickPlay}>\r\n      {isPlay ? (\r\n        <FontAwesomeIcon icon={faPause} />\r\n      ) : (\r\n        <FontAwesomeIcon icon={faPlay} />\r\n      )}\r\n    </PlayButtonContainer>\r\n  );\r\n};\r\n\r\nexport default PlayButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AvatarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n`;\r\nconst AvatarImage = styled.div`\r\n  display: flex;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  width: 200px;\r\n  height: 200px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 15px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst Avatar = ({ imgSrc }) => {\r\n  return (\r\n    <AvatarContainer>\r\n      <AvatarImage>\r\n        <Image src={imgSrc} alt=\"Avatar\" />\r\n      </AvatarImage>\r\n    </AvatarContainer>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SongInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  /* background-color: tomato; */\r\n  width: 100%;\r\n  height: 220px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  border-radius: 0px 0px 15px 15px;\r\n`;\r\n\r\nconst SongController = ({ children }) => {\r\n  return <SongInfoContainer>{children}</SongInfoContainer>;\r\n};\r\n\r\nexport default SongController;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  /* background-color: green; */\r\n  bottom: 200px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  text-shadow: 0.1em 0.1em 0 hsl(400 50% 30%);\r\n`;\r\n\r\nconst SongTitle = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default SongTitle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  width: 100%;\r\n  height: 30px;\r\n  border-top-left-radius: 15px;\r\n  border-top-right-radius: 15px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Ringanim = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst LdsRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n`;\r\n\r\nconst InLdsRing = styled.div`\r\n  box-sizing: border-box;\r\n  display: block;\r\n  position: absolute;\r\n  width: 64px;\r\n  height: 64px;\r\n  margin: 8px;\r\n  border: 8px solid #6c5ce7;\r\n  border-radius: 50%;\r\n  animation: ${Ringanim} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n  animation-delay: ${(props) => props.delay};\r\n  border-color: #6c5ce7 transparent transparent transparent;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 150px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <LdsRing>\r\n      <InLdsRing delay=\"-0.45s\"></InLdsRing>\r\n      <InLdsRing delay=\"-0.3s\"></InLdsRing>\r\n      <InLdsRing delay=\"-0.15s\"></InLdsRing>\r\n    </LdsRing>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackwardButton from \"../components/common/BackwardButton\";\r\nimport ForwardButton from \"../components/common/ForwardButton\";\r\nimport PlayButton from \"../components/common/PlayButton\";\r\nimport Avatar from \"../components/common/Avatar\";\r\nimport SongController from \"../components/common/SongController\";\r\nimport SongTitle from \"../components/common/SongTitle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBars,\r\n  faVolumeUp,\r\n  faVolumeOff,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport localforage from \"localforage\";\r\nimport Header from \"../components/common/Header\";\r\nimport Loader from \"../components/common/Loader\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n`;\r\n\r\nconst Player = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  /* transform: translateY(50%); */\r\n  width: 300px;\r\n  height: 500px;\r\n  border-radius: 15px;\r\n  border: 0.5px solid black;\r\n`;\r\n\r\nconst BackgroundContainer = styled.div`\r\n  position: fixed;\r\n  width: 300px;\r\n  height: 500px;\r\n  background-image: url(${(props) => props.bgSrc});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-radius: 15px;\r\n  z-index: -1;\r\n  filter: blur(2px);\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  /* background-color: black; */\r\n  width: 100%;\r\n  height: 70px;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  padding-top: 25px;\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  margin-left: 10px;\r\n  font-size: 20px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nconst Video = styled.video`\r\n  display: none;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst VolumeGroup = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80px;\r\n  color: #636e72b4;\r\n`;\r\n\r\n// 볼륨 range\r\nconst VolumeBox = styled.input`\r\n  -webkit-appearance: none;\r\n  width: 70%;\r\n  margin: 0 5px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  // 포인터\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    width: 12px;\r\n    height: 12px;\r\n    background: white;\r\n    border-radius: 50%;\r\n    margin-top: -5px;\r\n  }\r\n\r\n  // 바 스타일\r\n  &::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 5px;\r\n    /* box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d; */\r\n    border-radius: 30px;\r\n    border: 0.2px solid #010101;\r\n  }\r\n`;\r\n\r\n// 타임라인 range\r\nconst TimeLineBox = styled.input`\r\n  -webkit-appearance: none;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    height: 4px;\r\n    -webkit-appearance: none;\r\n    color: #13bba4;\r\n    border: 0.2px solid #010101;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    width: 12px;\r\n    height: 12px;\r\n    background: #dfe6e9;\r\n    margin-top: -5px;\r\n    box-shadow: -100vw 0 0 100vw rgba(255, 255, 255, 0.6);\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst TimeBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 0 10px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n`;\r\n\r\nconst TimeLineGroup = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst TotalTimeBox = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CurrentTimeBox = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst BottomGroup = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border-radius: 0px 0px 15px 15px;\r\n`;\r\n\r\nconst MUSIC_LF = \"currentmusic\";\r\nconst IMAGE_LF = \"currentimage\";\r\nconst BG_LF = \"currentbackground\";\r\n\r\nconst MusicPlay = () => {\r\n  const videoRef = useRef();\r\n  const volumeRef = useRef();\r\n  const currentTime = useRef();\r\n  const totalTime = useRef();\r\n  const timelineel = useRef();\r\n\r\n  const [srcValue, setSrcValue] = useState(\"\");\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n  const [bgSrc, setBgSrc] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [volumeBar, setVolumeBar] = useState(0.5);\r\n  const [timeline, setTimeline] = useState(0);\r\n  const [duration, setDuration] = useState(null);\r\n  const [originduration, setOriginDuration] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let volumeValue = volumeBar; // 볼륨 초깃값\r\n\r\n  const getLocalForage = () => {\r\n    localforage.getItem(MUSIC_LF, (err, value) => {\r\n      if (err) {\r\n        console.log(err);\r\n      }\r\n      setDuration(timeFormat(value.duration));\r\n      setOriginDuration(value.duration);\r\n      setLoading(false);\r\n    });\r\n    localforage.getItem(IMAGE_LF, (err, value) => {\r\n      if (err) {\r\n        console.log(err);\r\n      }\r\n      setImgSrc(value.imgSrc);\r\n      setName(value.name);\r\n    });\r\n    localforage.getItem(BG_LF, (err, value) => {\r\n      if (err) {\r\n        console.log(err);\r\n      }\r\n      setBgSrc(value.bgSrc);\r\n    });\r\n  };\r\n\r\n  // 음악 재생\r\n  const playMusic = () => {\r\n    if (videoRef.current.currentTime === 0) {\r\n      localforage.getItem(MUSIC_LF, (err, value) => {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n        const url = URL.createObjectURL(value.file); // 파일\r\n        setSrcValue(url);\r\n      });\r\n    } else {\r\n      videoRef.current.play();\r\n    }\r\n    videoRef.current.volume = volumeValue;\r\n  };\r\n\r\n  // 볼륨 컨트롤\r\n  const handleVolumeChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setVolumeBar(value);\r\n    volumeValue = value;\r\n    videoRef.current.volume = value;\r\n  };\r\n\r\n  // 타임라인 업데이트\r\n  const handleTimeUpdate = () => {\r\n    currentTime.current.innerText = timeFormat(\r\n      Math.floor(videoRef.current.currentTime)\r\n    );\r\n    setTimeline(Math.floor(videoRef.current.currentTime));\r\n    if (videoRef.current.ended) {\r\n      videoRef.current.currentTime = 0;\r\n    }\r\n  };\r\n\r\n  const handleTimelineChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    videoRef.current.currentTime = value;\r\n  };\r\n\r\n  const timeFormat = (seconds) => {\r\n    // 시간 형식을 포맷하는 함수\r\n    return new Date(seconds * 1000).toISOString().substr(15, 4);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const volume = volumeRef.current;\r\n    // localforage가 셋팅되는 시간이 필요하기때문에 딜레이를 살짝 주었다.\r\n    if (loading) {\r\n    }\r\n    setTimeout(getLocalForage, 3000);\r\n    if (!loading) {\r\n      volume.addEventListener(\"input\", handleVolumeChange);\r\n      video.addEventListener(\"timeupdate\", handleTimeUpdate);\r\n    }\r\n    return () => {\r\n      if (!loading) {\r\n        video.removeEventListener(\"timeupdate\", handleTimeUpdate);\r\n        volume.removeEventListener(\"input\", handleVolumeChange);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loading]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Player>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <BackgroundContainer bgSrc={bgSrc} />\r\n              <Header>\r\n                <BackLink to=\"/\">\r\n                  <FontAwesomeIcon icon={faBars} />\r\n                </BackLink>\r\n              </Header>\r\n              <Avatar imgSrc={imgSrc} />\r\n              <SongTitle>\r\n                <Title>{name}</Title>\r\n              </SongTitle>\r\n              <SongController>\r\n                <TimeLineGroup>\r\n                  <TimeLineBox\r\n                    type=\"range\"\r\n                    step=\"1\"\r\n                    value={timeline}\r\n                    min=\"0\"\r\n                    max={originduration}\r\n                    ref={timelineel}\r\n                    onChange={handleTimelineChange}\r\n                  />\r\n                  <TimeBox>\r\n                    <CurrentTimeBox ref={currentTime}>0:00</CurrentTimeBox>\r\n                    <TotalTimeBox ref={totalTime}>\r\n                      {duration ? duration : \"0:00\"}\r\n                    </TotalTimeBox>\r\n                  </TimeBox>\r\n                </TimeLineGroup>\r\n                <BottomGroup>\r\n                  <ButtonContainer>\r\n                    <BackwardButton videoRef={videoRef} />\r\n                    <PlayButton\r\n                      playMusic={playMusic}\r\n                      videoRef={videoRef}\r\n                      loading={loading}\r\n                    />\r\n                    <ForwardButton videoRef={videoRef} />\r\n                  </ButtonContainer>\r\n                  <VolumeGroup>\r\n                    <FontAwesomeIcon icon={faVolumeOff} />\r\n                    <VolumeBox\r\n                      type=\"range\"\r\n                      step=\"0.1\"\r\n                      value={volumeBar}\r\n                      min=\"0\"\r\n                      max=\"1\"\r\n                      ref={volumeRef}\r\n                      onChange={handleVolumeChange}\r\n                    />\r\n                    <FontAwesomeIcon icon={faVolumeUp} />\r\n                  </VolumeGroup>\r\n                </BottomGroup>\r\n                <Video\r\n                  src={srcValue}\r\n                  autoPlay={true}\r\n                  ref={videoRef}\r\n                  playsInline={true}\r\n                />\r\n              </SongController>\r\n            </>\r\n          )}\r\n        </Player>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MusicPlay;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const storageService = getStorage();\r\n\r\nexport default app;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport getBlobDuration from \"get-blob-duration\";\r\nimport { storageService } from \"../../fbase\";\r\nimport { getDownloadURL, ref, getMetadata, listAll } from \"@firebase/storage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport localforage from \"localforage\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  cursor: default;\r\n`;\r\n\r\nconst AvatarImg = styled.img`\r\n  height: 55px;\r\n  width: 55px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  font-size: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst RaidenBox = () => {\r\n  const MUSIC_LF = \"currentmusic\";\r\n  const IMAGE_LF = \"currentimage\";\r\n  const BG_LF = \"currentbackground\";\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n  const [bgSrc, setBgSrc] = useState(\"\");\r\n\r\n  const RAIDEN = 0;\r\n\r\n  // 아바타이미지를 받아온다.\r\n  const getImgFile = async () => {\r\n    const imgRef = ref(storageService, \"images/raiden.png\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setImgSrc(url);\r\n  };\r\n  getImgFile(); // 이미지 받아오는 함수 호출\r\n\r\n  // 백그라운드 이미지를 받아온다.\r\n  const getBackGround = async () => {\r\n    const imgRef = ref(storageService, \"images/raidenbg.jpg\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (evnet) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setBgSrc(url);\r\n  };\r\n  getBackGround(); // 백그라운드 이미지 받아오기.\r\n\r\n  // 음악을 받아옵니다.\r\n\r\n  const getMusicFile = async () => {\r\n    // 음악 선택\r\n    const listRef = ref(storageService);\r\n    const list = await listAll(listRef);\r\n    const filename = list.items[RAIDEN].name; // MP3 리스트 파일이름 가져오기\r\n    const musicRef = ref(storageService, filename);\r\n    const meta = await getMetadata(musicRef); // 지금 선택된 file 레퍼런스의 메타데이터 가져오기\r\n    const url = await getDownloadURL(musicRef);\r\n    const duration = await getBlobDuration(url);\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    // getBlobDuration 라이브러리를 통해서 blob의 재생시간을 가져옴!!\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      const blob = xhr.response;\r\n      // duration을 localforage에 저장했음. state에 저장해서 props로 보내려고했는데 잘 안됬다.\r\n      localforage.setItem(MUSIC_LF, {\r\n        name: meta.name,\r\n        file: blob,\r\n        duration,\r\n      });\r\n      localforage.setItem(IMAGE_LF, {\r\n        imgSrc,\r\n        name: \"Raiden Shogun\",\r\n      });\r\n      localforage.setItem(BG_LF, {\r\n        bgSrc,\r\n      });\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <AvatarImg src={imgSrc} alt=\"Avatar\" />\r\n      <TextBox>Raiden Shogun</TextBox>\r\n      <Link\r\n        to={{\r\n          pathname: `/play`,\r\n          state: {\r\n            imgSrc,\r\n            bgSrc,\r\n            name: \"Raiden Shogun\",\r\n          },\r\n        }}\r\n      >\r\n        <Icon onClick={getMusicFile}>\r\n          <FontAwesomeIcon icon={faPlayCircle} />\r\n        </Icon>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RaidenBox;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport getBlobDuration from \"get-blob-duration\";\r\nimport { storageService } from \"../../fbase\";\r\nimport { getDownloadURL, ref, getMetadata, listAll } from \"@firebase/storage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport localforage from \"localforage\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  cursor: default;\r\n`;\r\n\r\nconst AvatarImg = styled.img`\r\n  height: 55px;\r\n  width: 55px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  font-size: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst HutaoBox = () => {\r\n  const MUSIC_LF = \"currentmusic\";\r\n  const IMAGE_LF = \"currentimage\";\r\n  const BG_LF = \"currentbackground\";\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n  const [bgSrc, setBgSrc] = useState(\"\");\r\n\r\n  const HUTAO = 1;\r\n\r\n  // 아바타이미지를 받아온다.\r\n  const getImgFile = async () => {\r\n    const imgRef = ref(storageService, \"images/hutao_avatar.png\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setImgSrc(url);\r\n  };\r\n  getImgFile(); // 이미지 받아오는 함수 호출\r\n\r\n  // 백그라운드 이미지를 받아온다.\r\n  const getBackGround = async () => {\r\n    const imgRef = ref(storageService, \"images/hutaobg.jpg\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (evnet) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setBgSrc(url);\r\n  };\r\n  getBackGround(); // 백그라운드 이미지 받아오기.\r\n\r\n  // 음악을 받아옵니다.\r\n\r\n  const getMusicFile = async () => {\r\n    // 음악 선택\r\n    const listRef = ref(storageService);\r\n    const list = await listAll(listRef);\r\n    const filename = list.items[HUTAO].name; // 파일이름 가져오기\r\n    const musicRef = ref(storageService, filename);\r\n    const meta = await getMetadata(musicRef); // 지금 선택된 file 레퍼런스의 메타데이터 가져오기\r\n    const url = await getDownloadURL(musicRef);\r\n    const duration = await getBlobDuration(url);\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    // getBlobDuration 라이브러리를 통해서 blob의 재생시간을 가져옴!!\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      const blob = xhr.response;\r\n      // duration을 localforage에 저장했음. state에 저장해서 props로 보내려고했는데 잘 안됬다.\r\n      localforage.setItem(MUSIC_LF, {\r\n        name: meta.name,\r\n        file: blob,\r\n        duration,\r\n      });\r\n      localforage.setItem(IMAGE_LF, {\r\n        imgSrc,\r\n        name: \"Hutao\",\r\n      });\r\n      localforage.setItem(BG_LF, {\r\n        bgSrc,\r\n      });\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <AvatarImg src={imgSrc} alt=\"Avatar\" />\r\n      <TextBox>Hutao</TextBox>\r\n      <Link\r\n        to={{\r\n          pathname: `/play`,\r\n          state: {\r\n            imgSrc,\r\n            bgSrc,\r\n            name: \"Hutao\",\r\n          },\r\n        }}\r\n      >\r\n        <Icon onClick={getMusicFile}>\r\n          <FontAwesomeIcon icon={faPlayCircle} />\r\n        </Icon>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HutaoBox;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport getBlobDuration from \"get-blob-duration\";\r\nimport { storageService } from \"../../fbase\";\r\nimport { getDownloadURL, ref, getMetadata, listAll } from \"@firebase/storage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport localforage from \"localforage\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  cursor: default;\r\n`;\r\n\r\nconst AvatarImg = styled.img`\r\n  height: 55px;\r\n  width: 55px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  font-size: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst KazuhaBox = () => {\r\n  const MUSIC_LF = \"currentmusic\";\r\n  const IMAGE_LF = \"currentimage\";\r\n  const BG_LF = \"currentbackground\";\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n  const [bgSrc, setBgSrc] = useState(\"\");\r\n\r\n  const KAZUHA = 2;\r\n\r\n  // 아바타이미지를 받아온다.\r\n  const getImgFile = async () => {\r\n    const imgRef = ref(storageService, \"images/kazuha.png\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setImgSrc(url);\r\n  };\r\n  getImgFile(); // 이미지 받아오는 함수 호출\r\n\r\n  // 백그라운드 이미지를 받아온다.\r\n  const getBackGround = async () => {\r\n    const imgRef = ref(storageService, \"images/kazuhabg.jpg\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (evnet) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setBgSrc(url);\r\n  };\r\n  getBackGround(); // 백그라운드 이미지 받아오기.\r\n\r\n  // 음악을 받아옵니다.\r\n\r\n  const getMusicFile = async () => {\r\n    // 음악 선택\r\n    const listRef = ref(storageService);\r\n    const list = await listAll(listRef);\r\n    const filename = list.items[KAZUHA].name; // 파일이름 가져오기\r\n    const musicRef = ref(storageService, filename);\r\n    const meta = await getMetadata(musicRef); // 지금 선택된 file 레퍼런스의 메타데이터 가져오기\r\n    const url = await getDownloadURL(musicRef);\r\n    const duration = await getBlobDuration(url);\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    // getBlobDuration 라이브러리를 통해서 blob의 재생시간을 가져옴!!\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      const blob = xhr.response;\r\n      // duration을 localforage에 저장했음. state에 저장해서 props로 보내려고했는데 잘 안됬다.\r\n      localforage.setItem(MUSIC_LF, {\r\n        name: meta.name,\r\n        file: blob,\r\n        duration,\r\n      });\r\n      localforage.setItem(IMAGE_LF, {\r\n        imgSrc,\r\n        name: \"Kazuha\",\r\n      });\r\n      localforage.setItem(BG_LF, {\r\n        bgSrc,\r\n      });\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <AvatarImg src={imgSrc} alt=\"Avatar\" />\r\n      <TextBox>Kazuha</TextBox>\r\n      <Link\r\n        to={{\r\n          pathname: `/play`,\r\n          state: {\r\n            imgSrc,\r\n            bgSrc,\r\n            name: \"Kazuha\",\r\n          },\r\n        }}\r\n      >\r\n        <Icon onClick={getMusicFile}>\r\n          <FontAwesomeIcon icon={faPlayCircle} />\r\n        </Icon>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default KazuhaBox;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport getBlobDuration from \"get-blob-duration\";\r\nimport { storageService } from \"../../fbase\";\r\nimport { getDownloadURL, ref, getMetadata, listAll } from \"@firebase/storage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport localforage from \"localforage\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  cursor: default;\r\n`;\r\n\r\nconst AvatarImg = styled.img`\r\n  height: 55px;\r\n  width: 55px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  font-size: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst KleeBox = () => {\r\n  const MUSIC_LF = \"currentmusic\";\r\n  const IMAGE_LF = \"currentimage\";\r\n  const BG_LF = \"currentbackground\";\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n  const [bgSrc, setBgSrc] = useState(\"\");\r\n\r\n  const KLEE = 3;\r\n\r\n  // 아바타이미지를 받아온다.\r\n  const getImgFile = async () => {\r\n    const imgRef = ref(storageService, \"images/klee.png\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setImgSrc(url);\r\n  };\r\n  getImgFile(); // 이미지 받아오는 함수 호출\r\n\r\n  // 백그라운드 이미지를 받아온다.\r\n  const getBackGround = async () => {\r\n    const imgRef = ref(storageService, \"images/kleebg.jpg\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (evnet) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setBgSrc(url);\r\n  };\r\n  getBackGround(); // 백그라운드 이미지 받아오기.\r\n\r\n  // 음악을 받아옵니다.\r\n\r\n  const getMusicFile = async () => {\r\n    // 음악 선택\r\n    const listRef = ref(storageService);\r\n    const list = await listAll(listRef);\r\n    const filename = list.items[KLEE].name; // 파일이름 가져오기\r\n    const musicRef = ref(storageService, filename);\r\n    const meta = await getMetadata(musicRef); // 지금 선택된 file 레퍼런스의 메타데이터 가져오기\r\n    const url = await getDownloadURL(musicRef);\r\n    const duration = await getBlobDuration(url);\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    // getBlobDuration 라이브러리를 통해서 blob의 재생시간을 가져옴!!\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      const blob = xhr.response;\r\n      // duration을 localforage에 저장했음. state에 저장해서 props로 보내려고했는데 잘 안됬다.\r\n      localforage.setItem(MUSIC_LF, {\r\n        name: meta.name,\r\n        file: blob,\r\n        duration,\r\n      });\r\n      localforage.setItem(IMAGE_LF, {\r\n        imgSrc,\r\n        name: \"Klee\",\r\n      });\r\n      localforage.setItem(BG_LF, {\r\n        bgSrc,\r\n      });\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <AvatarImg src={imgSrc} alt=\"Avatar\" />\r\n      <TextBox>Klee</TextBox>\r\n      <Link\r\n        to={{\r\n          pathname: `/play`,\r\n          state: {\r\n            imgSrc,\r\n            bgSrc,\r\n            name: \"Klee\",\r\n          },\r\n        }}\r\n      >\r\n        <Icon onClick={getMusicFile}>\r\n          <FontAwesomeIcon icon={faPlayCircle} />\r\n        </Icon>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default KleeBox;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport getBlobDuration from \"get-blob-duration\";\r\nimport { storageService } from \"../../fbase\";\r\nimport { getDownloadURL, ref, getMetadata, listAll } from \"@firebase/storage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport localforage from \"localforage\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  cursor: default;\r\n`;\r\n\r\nconst AvatarImg = styled.img`\r\n  height: 55px;\r\n  width: 55px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  font-size: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst AyakaBox = () => {\r\n  const MUSIC_LF = \"currentmusic\";\r\n  const IMAGE_LF = \"currentimage\";\r\n  const BG_LF = \"currentbackground\";\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n  const [bgSrc, setBgSrc] = useState(\"\");\r\n\r\n  const AYAKA = 4;\r\n\r\n  // 아바타이미지를 받아온다.\r\n  const getImgFile = async () => {\r\n    const imgRef = ref(storageService, \"images/ayaka.png\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setImgSrc(url);\r\n  };\r\n  getImgFile(); // 이미지 받아오는 함수 호출\r\n\r\n  // 백그라운드 이미지를 받아온다.\r\n  const getBackGround = async () => {\r\n    const imgRef = ref(storageService, \"images/ayakabg.jpg\");\r\n    const url = await getDownloadURL(imgRef);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (evnet) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      const blob = xhr.response;\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n    setBgSrc(url);\r\n  };\r\n  getBackGround(); // 백그라운드 이미지 받아오기.\r\n\r\n  // 음악을 받아옵니다.\r\n\r\n  const getMusicFile = async () => {\r\n    // 음악 선택\r\n    const listRef = ref(storageService);\r\n    const list = await listAll(listRef);\r\n    const filename = list.items[AYAKA].name; // 파일이름 가져오기\r\n    const musicRef = ref(storageService, filename);\r\n    const meta = await getMetadata(musicRef); // 지금 선택된 file 레퍼런스의 메타데이터 가져오기\r\n    const url = await getDownloadURL(musicRef);\r\n    const duration = await getBlobDuration(url);\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    // getBlobDuration 라이브러리를 통해서 blob의 재생시간을 가져옴!!\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function (event) {\r\n      const blob = xhr.response;\r\n      // duration을 localforage에 저장했음. state에 저장해서 props로 보내려고했는데 잘 안됬다.\r\n      localforage.setItem(MUSIC_LF, {\r\n        name: meta.name,\r\n        file: blob,\r\n        duration,\r\n      });\r\n      localforage.setItem(IMAGE_LF, {\r\n        imgSrc,\r\n        name: \"Ayaka\",\r\n      });\r\n      localforage.setItem(BG_LF, {\r\n        bgSrc,\r\n      });\r\n    };\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <AvatarImg src={imgSrc} alt=\"Avatar\" />\r\n      <TextBox>Ayaka</TextBox>\r\n      <Link\r\n        to={{\r\n          pathname: `/play`,\r\n          state: {\r\n            imgSrc,\r\n            bgSrc,\r\n            name: \"Ayaka\",\r\n          },\r\n        }}\r\n      >\r\n        <Icon onClick={getMusicFile}>\r\n          <FontAwesomeIcon icon={faPlayCircle} />\r\n        </Icon>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AyakaBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"../components/common/Header\";\r\nimport RaidenBox from \"../components/Characters/RaidenBox\";\r\nimport HutaoBox from \"../components/Characters/HutaoBox\";\r\nimport KazuhaBox from \"../components/Characters/KazuhaBox\";\r\nimport KleeBox from \"../components/Characters/KleeBox\";\r\nimport AyakaBox from \"../components/Characters/AyakaBox\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n`;\r\n\r\nconst Player = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  /* transform: translateY(50%); */\r\n  background: rgb(238, 174, 202);\r\n  background: linear-gradient(\r\n    rgba(238, 174, 202, 1) 0%,\r\n    rgba(148, 187, 233, 1) 100%\r\n  );\r\n  width: 300px;\r\n  height: 500px;\r\n  border-radius: 15px;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-family: \"Ceviche One\", cursive;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst ListBox = styled.div`\r\n  margin: 0 auto;\r\n  margin-top: 20px;\r\n  width: 90%;\r\n  height: 400px;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n  overflow-y: scroll;\r\n  font-family: \"Fredoka One\", cursive;\r\n  &::-webkit-scrollbar {\r\n    height: 8px;\r\n    width: 5px;\r\n    border-radius: 6px;\r\n    background: rgba(0, 0, 0, 0.8);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n    border-radius: 6px;\r\n  }\r\n`;\r\n\r\nconst MusicList = () => {\r\n  return (\r\n    <Container>\r\n      <Player>\r\n        <Header>\r\n          <Title>\r\n            <span>Genshin Music</span>\r\n          </Title>\r\n        </Header>\r\n        <ListBox>\r\n          <RaidenBox />\r\n          <HutaoBox />\r\n          <KazuhaBox />\r\n          <KleeBox />\r\n          <AyakaBox />\r\n        </ListBox>\r\n      </Player>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MusicList;\r\n","import React from \"react\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport MusicPlay from \"../routes/MusicPlay\";\nimport MusicList from \"../routes/MusicList\";\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <HashRouter>\n        <Route path=\"/\" exact component={MusicList} />\n        <Route path=\"/play\" component={MusicPlay} />\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}